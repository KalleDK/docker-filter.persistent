#!/bin/sh

set -e

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

SAVE_FILE=/etc/iptables/docker-rules.v4

IPTABLES_RESTORE=iptables-restore
IPTABLES_SAVE=iptables-save
IPTABLES=iptables

LOG="logger -s -t dockerfilter"

PROTECTED_CHAINS="PREROUTING POSTROUTING FORWARD OUTPUT DOCKER DOCKER-ISOLATION-STAGE-1 DOCKER-ISOLATION-STAGE-2"
PROTECTED_CHAINS_FILTER=''
for chain in $PROTECTED_CHAINS
do
    PROTECTED_CHAINS_FILTER="${PROTECTED_CHAINS_FILTER}^${chain}"'$|'
done
PROTECTED_CHAINS_FILTER=$(echo "${PROTECTED_CHAINS_FILTER}" | sed -r 's/\|$//')

BUILTIN_CHAINS="INPUT FORWARD OUTPUT"
BUILTIN_CHAINS_FILTER=''
for chain in $BUILTIN_CHAINS
do
    BUILTIN_CHAINS_FILTER="${BUILTIN_CHAINS_FILTER}^${chain}"'$|'
done
BUILTIN_CHAINS_FILTER=$(echo "${BUILTIN_CHAINS_FILTER}" | sed -r 's/\|$//')

SKIP_DELETE_FILTER='^DOCKER-USER$'




flush_rules()
{
    $LOG "flushing ipv6 rules"
    TABLES=$($IPTABLES_SAVE | sed -E -n 's/^\*//p')
    for table in $TABLES
    do
        BUILTIN_CHAINS=$($IPTABLES_SAVE -t "${table}" | sed -E -n 's/^:([^ ]+) [^\-].*/\1/p')
        for chain in $BUILTIN_CHAINS
        do
            $LOG "Policy $table $chain"
            # policy can't be set on user-defined chains
            $IPTABLES -t "${table}" -P "${chain}" ACCEPT
        done

        FLUSH_CHAINS=$($IPTABLES_SAVE -t "${table}" | sed -E -n 's/^:([^ ]+).*/\1/p' | grep -v -E "${PROTECTED_CHAINS_FILTER}"  || true)
        for chain in $FLUSH_CHAINS
        do
            $LOG "Flush $table $chain"
            $IPTABLES -t "${table}" -F "${chain}"
            $IPTABLES -t "${table}" -Z "${chain}"
        done

        DELETE_CHAINS=$($IPTABLES_SAVE -t "${table}" | sed -E -n 's/^:([^ ]+).*/\1/p' | grep -v -E "${PROTECTED_CHAINS_FILTER}" | grep -v -E "${BUILTIN_CHAINS_FILTER}" | grep -E -v "${SKIP_DELETE_FILTER}" || true)
        for chain in $DELETE_CHAINS
        do
            $LOG "Delete $table $chain"
            $IPTABLES -t "${table}" -X "${chain}"
        done
    done
}


load_rules()
{
    if [ ! -f $SAVE_FILE ]; then
        $LOG "skipping IPv4 no file"
        return
    fi
    $LOG "loading IPv4 rules $SAVE_FILE"
    $IPTABLES_RESTORE --noflush < $SAVE_FILE
}

save_rules()
{
    if [ "${IPTABLES_DOCKER_SKIP_SAVE}" = "yes" ]; then
        $LOG "skipping saving IPv4"
        return
    fi
    
    IPTABLE_FILTER=''
    for chain in $PROTECTED_CHAINS
    do
        IPTABLE_FILTER="${IPTABLE_FILTER}:${chain}"' |-A '"${chain}"' |'
    done
    IPTABLE_FILTER=$(echo "${IPTABLE_FILTER}" | sed -r 's/ \|$//')
    
    iptables-save | grep -v -E "${IPTABLE_FILTER}" > $SAVE_FILE
    chmod 0640 $SAVE_FILE
}



case "$1" in
start|restart|reload|force-reload)
    load_rules
    ;;
save)
    save_rules
    ;;
stop)
    echo "No flushing on stop"
    ;;
flush)
    flush_rules
    ;;
*)
    echo "Usage: $0 {start|restart|reload|force-reload|save|flush}" >&2
    exit 1
    ;;
esac
